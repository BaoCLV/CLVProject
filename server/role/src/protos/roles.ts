// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.1
// source: src/protos/roles.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface CheckPermissionRequest {
  userId: string;
  role: string;
}

export interface CheckPermissionResponse {
  hasPermission: boolean;
}

export interface RolePermissionServiceClient {
  checkPermission(request: CheckPermissionRequest): Observable<CheckPermissionResponse>;
}

export interface RolePermissionServiceController {
  checkPermission(
    request: CheckPermissionRequest,
  ): Promise<CheckPermissionResponse> | Observable<CheckPermissionResponse> | CheckPermissionResponse;
}

export function RolePermissionServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["checkPermission"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("RolePermissionService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("RolePermissionService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ROLE_PERMISSION_SERVICE_NAME = "RolePermissionService";
